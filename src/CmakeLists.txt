
#INCLUDE(RegPackageMacro)

find_package(Qt5 COMPONENTS Core Widgets Gui REQUIRED)
add_subdirectory(Core)
add_subdirectory(Configuration)

# JUI SETUP ###################################################

add_library(Jui SHARED
	${Core_hdr}
	${Core_src}
	${Core_res}
)

add_custom_command(TARGET Jui
	PRE_BUILD
	COMMAND ${CMAKE_COMMAND} -E make_directory ${CMAKE_INSTALL_PREFIX}/include
    COMMAND ${CMAKE_COMMAND} -E copy_if_different ${Core_hdr} ${CMAKE_INSTALL_PREFIX}/include
)

target_include_directories(Jui PUBLIC 
	${CMAKE_INSTALL_PREFIX}/include
)

target_include_directories(Jui PRIVATE
	$<TARGET_PROPERTY:Qt5::Core,INTERFACE_INCLUDE_DIRECTORIES>
	$<TARGET_PROPERTY:Qt5::Gui,INTERFACE_INCLUDE_DIRECTORIES>
	$<TARGET_PROPERTY:Qt5::Widgets,INTERFACE_INCLUDE_DIRECTORIES>
)

target_link_libraries(Jui PRIVATE 
	$<TARGET_LINKER_FILE:Qt5::Core> 
	$<TARGET_LINKER_FILE:Qt5::Gui>
	$<TARGET_LINKER_FILE:Qt5::Widgets>
)

install( TARGETS Jui 
	EXPORT JuiTargets
	ARCHIVE DESTINATION ${CMAKE_INSTALL_PREFIX}/lib
    LIBRARY DESTINATION ${CMAKE_INSTALL_PREFIX}/lib
	RUNTIME DESTINATION ${CMAKE_INSTALL_PREFIX}/bin
	#COMPONENT applications
)

#RegPackage(Jui)

# CONFIG SETUP ###################################################


add_executable(Config
	${Config_hdr}
	${Config_src}
)

target_include_directories(Config PRIVATE 
	${CMAKE_CURRENT_LIST_DIR}/Configuration
	$<TARGET_PROPERTY:Jui,INTERFACE_INCLUDE_DIRECTORIES>
	$<TARGET_PROPERTY:Qt5::Widgets,INTERFACE_INCLUDE_DIRECTORIES>
)

target_link_libraries(Config PRIVATE 
	$<TARGET_LINKER_FILE:Jui> 
	$<TARGET_LINKER_FILE:Qt5::Core> 
	$<TARGET_LINKER_FILE:Qt5::Widgets>
	$<TARGET_LINKER_FILE:Qt5::WinMain> # dulezity pro main() funkci
)

IF(WIN32)
	IF( ${CMAKE_CONFIGURATION_TYPES} STREQUAL "Release" )
		SET_TARGET_PROPERTIES( Config PROPERTIES WIN32_EXECUTABLE TRUE )
	ENDIF()
ENDIF(WIN32)

install(
	TARGETS Config
	RUNTIME DESTINATION ${CMAKE_INSTALL_PREFIX}/bin
)
